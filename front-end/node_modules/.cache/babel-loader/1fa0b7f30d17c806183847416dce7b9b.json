{"ast":null,"code":"var _jsxFileName = \"/root/Documents/work/CNPM/web-app/cnpm-web/src/components/ProfileComp/PharmacoTool.js\";\nimport React from 'react';\nimport { FaPlus } from 'react-icons/fa';\nimport { setInterval } from 'timers';\n\nclass PharmacoTool extends React.Component {\n  constructor(props) {\n    super(props);\n    this.clickNumber = 0;\n    this.state = {\n      details: '',\n      medicament: [{\n        DCI: \"\",\n        nomberDelot: 0,\n        posology: \"\",\n        dataDapparitionDeleffetIndiserable: \"\",\n        dateDexpositionAuMedicament: \"\",\n        dateDarretOuModificationDuTraitement: \"\",\n        VI: \"\"\n      }],\n      effetIndiserable: [],\n      delaiDapparitionCritereChrono: 0,\n      evolutionDeffet: 0,\n      reAdministration: 0,\n      critereSemiologiqueCliniqueOuParaclinique: 0,\n      autreCauseNonMedicamenteuse: 0,\n      examenComplementaire: 0\n    };\n    this.handlchange = this.handlchange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.didDciMatch = this.didDciMatch.bind(this);\n    this.addDrug = this.addDrug.bind(this);\n    this.showInfo = this.showInfo.bind(this);\n    this.isFocused = this.isFocused.bind(this);\n    this.isblured = this.isblured.bind(this);\n  }\n\n  handlchange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n    this.didDciMatch(this.state.drugs);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(JSON.stringify(this.state));\n  }\n\n  addDrug() {\n    this.state.medicament.push({\n      DCI: \"\",\n      nomberDelot: 0,\n      posology: \"\",\n      dataDapparitionDeleffetIndiserable: \"\",\n      dateDexpositionAuMedicament: \"\",\n      dateDarretOuModificationDuTraitement: \"\",\n      VI: \"\"\n    });\n    this.setState([...this.state.medicament]);\n  }\n\n  isFocused(id) {\n    let drugInfo = document.getElementsByClassName('pharmatoolin')[id];\n    this.state.medicament.filter((x, i) => {});\n    drugInfo.classList.add('show');\n  }\n\n  isblured(id) {\n    let drugInfo = document.getElementsByClassName('pharmatoolin')[id];\n    drugInfo.classList.remove('show');\n  }\n\n  didDciMatch(mdrugs) {//console.log(this.state.drugs)\n  }\n\n  showInfo(type) {\n    let info;\n    const dataBanner = document.querySelector('.data-details');\n    setTimeout(() => {\n      dataBanner.classList.add('show');\n    }, 1);\n\n    switch (type) {\n      case 'dem':\n        info = \"date D'exposition Au Medicament\";\n        this.setState({\n          details: info\n        });\n        break;\n\n      case 'daei':\n        info = \"data D'apparition De leffetIndiserable\";\n        this.setState({\n          details: info\n        });\n        break;\n\n      case 'ddmt':\n        info = \"date Darret Ou Modification Du Traitement \";\n        this.setState({\n          details: info\n        });\n        break;\n    } //Show information about that input \n    //hide the information \n\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.props.status ? \"pharma raised\" : 'hide raised',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"box meds-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      style: {\n        'paddingTop': 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Medicaments\"), this.state.medicament.map((drug, index) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"   Name of the Drug\",\n      required: true,\n      onFocus: () => this.isFocused(index),\n      onBlur: () => this.isblured(index),\n      className: \"pharmaInput\",\n      key: index,\n      value: drug.DCI,\n      onChange: event => {\n        this.state.medicament[index].DCI = event.target.value;\n        this.setState([...this.state.medicament]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(FaPlus, {\n      className: \"med-add-button\",\n      onClick: this.addDrug,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(\"section\", {\n      className: \"data-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, this.state.details), React.createElement(\"section\", {\n      className: \"box side-effects\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      style: {\n        'paddingTop': 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Effets Indesirables\"), React.createElement(\"textarea\", {\n      name: \"effects\",\n      type: \"text\",\n      required: true,\n      placeholder: \"   Side Effect\",\n      className: \"pharmaInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"btn\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(\"section\", {\n      className: \"meds-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.state.medicament.map((drug, i) => React.createElement(\"form\", {\n      className: \"pharmatoolin\",\n      method: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      style: {\n        paddingTop: '40px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, this.state.medicament[i].DCI), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"   Posology\",\n      className: \"pharmaInput\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"   Voie\",\n      className: \"pharmaInput\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"   N\\xB0lot\",\n      className: \"pharmaInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"date\",\n      placeholder: \"DAEI\",\n      onFocus: e => this.showInfo('daei', e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"date\",\n      placeholder: \"DEM\",\n      onFocus: e => this.showInfo('dem', e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      value: this.state.medicament.dateDarretOuModificationDuTraitement,\n      name: \"ddmt\",\n      type: \"date\",\n      onChange: this.handlchange,\n      placeholder: \"DDMT\",\n      onFocus: e => this.showInfo('ddmt', e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default PharmacoTool;","map":{"version":3,"sources":["/root/Documents/work/CNPM/web-app/cnpm-web/src/components/ProfileComp/PharmacoTool.js"],"names":["React","FaPlus","setInterval","PharmacoTool","Component","constructor","props","clickNumber","state","details","medicament","DCI","nomberDelot","posology","dataDapparitionDeleffetIndiserable","dateDexpositionAuMedicament","dateDarretOuModificationDuTraitement","VI","effetIndiserable","delaiDapparitionCritereChrono","evolutionDeffet","reAdministration","critereSemiologiqueCliniqueOuParaclinique","autreCauseNonMedicamenteuse","examenComplementaire","handlchange","bind","handleSubmit","didDciMatch","addDrug","showInfo","isFocused","isblured","event","target","name","value","setState","drugs","preventDefault","console","log","JSON","stringify","push","id","drugInfo","document","getElementsByClassName","filter","x","i","classList","add","remove","mdrugs","type","info","dataBanner","querySelector","setTimeout","render","status","map","drug","index","paddingTop","e"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { FaPlus } from 'react-icons/fa'\nimport { setInterval } from 'timers';\n\nclass PharmacoTool extends React.Component{\n    constructor(props){\n        super(props);\n        this.clickNumber = 0\n        this.state = { \n            details : '',\n            medicament:[{\n                DCI : \"\",\n                nomberDelot:0,\n                posology:\"\",\n                dataDapparitionDeleffetIndiserable:\"\",\n                dateDexpositionAuMedicament:\"\",\n                dateDarretOuModificationDuTraitement:\"\",\n                VI:\"\"\n            }], \n            effetIndiserable:[],\n            delaiDapparitionCritereChrono:0,\n            evolutionDeffet:0,\n            reAdministration:0,\n            critereSemiologiqueCliniqueOuParaclinique:0,\n            autreCauseNonMedicamenteuse:0,\n            examenComplementaire:0,    \n        }\n        this.handlchange = this.handlchange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.didDciMatch = this.didDciMatch.bind(this)\n        this.addDrug = this.addDrug.bind(this)\n        this.showInfo = this.showInfo.bind(this)\n        this.isFocused=this.isFocused.bind(this)\n        this.isblured=this.isblured.bind(this)\n    }\n    handlchange(event){\n        const {name ,value } = event.target\n        this.setState({\n            [name]:value\n        })\n        this.didDciMatch(this.state.drugs)\n    }\n    handleSubmit(event){\n        event.preventDefault();\n        console.log(JSON.stringify(this.state))\n    }\n    addDrug(){\n        this.state.medicament.push({\n            DCI : \"\",\n            nomberDelot:0,\n            posology:\"\",\n            dataDapparitionDeleffetIndiserable:\"\",\n            dateDexpositionAuMedicament:\"\",\n            dateDarretOuModificationDuTraitement:\"\",\n            VI:\"\"\n        })\n        this.setState([...this.state.medicament]);\n    }\n    isFocused(id){\n        let drugInfo = document.getElementsByClassName('pharmatoolin')[id]\n        this.state.medicament.filter((x,i)=>{\n            \n        })\n        drugInfo.classList.add('show')\n    }\n    isblured(id){\n        let drugInfo = document.getElementsByClassName('pharmatoolin')[id]\n        drugInfo.classList.remove('show')\n    }\n    didDciMatch(mdrugs){\n        //console.log(this.state.drugs)\n    }\n    showInfo(type){\n        let info;\n        const dataBanner = document.querySelector('.data-details')\n        setTimeout(() => {\n            dataBanner.classList.add('show')\n        }, 1);\n        switch (type) {\n            case 'dem':\n                info = \"date D'exposition Au Medicament\"\n                this.setState({details:info})\n                break\n            case 'daei':\n                info = \"data D'apparition De leffetIndiserable\"\n                this.setState({details:info})\n                break\n            case 'ddmt':\n                info = \"date Darret Ou Modification Du Traitement \"\n                this.setState({details:info})\n                break;\n          }\n        \n        //Show information about that input \n        //hide the information \n    }\n    render(){\n        return(\n         <div className={this.props.status?\"pharma raised\":'hide raised'}>\n            <section className=\"box meds-name\">\n                <h4 style={{'paddingTop':20}}>Medicaments</h4>\n            {this.state.medicament.map((drug,index) => (\n            <div>\n            <input\n            placeholder=\"   Name of the Drug\"\n            required={true}\n            onFocus={() => this.isFocused(index)}\n            onBlur={() => this.isblured(index)}\n            className=\"pharmaInput\"\n            key={index}\n            value={drug.DCI}\n            onChange={event => {\n              this.state.medicament[index].DCI = event.target.value;\n              this.setState([...this.state.medicament]);\n            }}\n            />\n            <br></br>\n            </div>\n            ))}\n                <br></br>\n                <FaPlus \n                className=\"med-add-button\"\n                onClick={this.addDrug}\n                />\n            </section>\n            <section className=\"data-details\">\n                 {this.state.details}\n            </section>\n            <section className=\"box side-effects\">\n            <form>\n            <h4 style={{'paddingTop':20}}>Effets Indesirables</h4>\n                <textarea \n                name=\"effects\"\n                type=\"text\"\n                required={true}\n                placeholder=\"   Side Effect\"\n                className=\"pharmaInput\"\n                />\n                <button id=\"btn\" onSubmit={this.handleSubmit}>Submit</button>\n            </form>\n            </section>\n            <section className=\"meds-info\">\n                {this.state.medicament.map((drug,i)=>(\n                <form className=\"pharmatoolin\" method=\"POST\">\n                    <h5 style={{paddingTop:'40px'}}>{this.state.medicament[i].DCI}</h5>\n                    <input \n                    type='text'\n                    placeholder='   Posology'\n                    className=\"pharmaInput\"\n                    required={true}\n                    />\n                    <br></br>\n                    <input \n                    type='text'\n                    placeholder='   Voie'\n                    className=\"pharmaInput\"\n                    required={true}\n                    />\n                    <br></br>\n                    <input \n                    type='number'\n                    placeholder='   N°lot'\n                    className=\"pharmaInput\"\n                    />\n                    <br></br>\n                    <input \n                    type='date'\n                    placeholder='DAEI'\n                    onFocus={(e) =>this.showInfo('daei',e)}\n                    /><br></br>\n                    <input \n                    type='date'\n                    placeholder='DEM'\n                    onFocus={(e) =>this.showInfo('dem',e)}\n                    /><br></br>\n                    <input \n                    value={this.state.medicament.dateDarretOuModificationDuTraitement}\n                    name='ddmt'\n                    type='date'\n                    onChange={this.handlchange}\n                    placeholder='DDMT'\n                    onFocus={(e) =>this.showInfo('ddmt',e)}\n                    /><br></br>\n            </form>\n                ))}\n        </section>\n        </div>\n        )\n    }\n}\nexport default PharmacoTool;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}